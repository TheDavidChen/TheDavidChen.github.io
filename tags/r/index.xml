<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on David Chen</title>
    <link>/tags/r/</link>
    <description>Recent content in R on David Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 18 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R - Overview of v1.0.0 of dtplyr and dplyr</title>
      <link>/post/r-dtplyr-dplyr/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-dtplyr-dplyr/</guid>
      <description>In this post, we discuss v1.0.0 of the dtplyr package and some changes made in the v1.0.0 update of dplyr. This post essentially summarizes these two posts:
dtplyr 1.0.0 - Hadley Wickhamdplyr 1.0.0 - Hadley WickhamAs these are two short, well-written posts, I highly recommend simply reading those two posts. If not, hopefully this post will inspire you to read them afterwards.
DtplyrSummaryIf you prefer dplyr syntax over data.</description>
    </item>
    
    <item>
      <title>R/Rstudio - Why Use Projects?</title>
      <link>/post/rstudio-why-use-projects/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/rstudio-why-use-projects/</guid>
      <description>The use of projects (.Rproj files) is fundamental to organized coding and project management, and should be used essentially 100% of the time while using RStudio. Thus in this post, we will discuss why you should use projects, how to create them, and some organization standards. We will also list a few additional resources for you to learn more about the subject at the very end.
Why Use It?In my opinion, there are four fundamental reasons why you should use projects:</description>
    </item>
    
    <item>
      <title>Website Development - Highlighting Code Chunks</title>
      <link>/post/website-highlighting-code-chunks/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/website-highlighting-code-chunks/</guid>
      <description>June 20th Edit: R Code Chunks were updated throughout the website automatically, so the coloring is slightly different. This post is maintained to show another way of changing the chunk features.
Whenever we need to include functional R code, whether it’s to check the output or just see how it was written, we include code chunks. Yet, currently on this website, it is extremely difficult to differentiate from the normal text.</description>
    </item>
    
    <item>
      <title>Free Resources to Learn R</title>
      <link>/post/resources-to-learn-r/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/resources-to-learn-r/</guid>
      <description>Throughout the school year, and especially while working as a statistical consultant, people would often ask me about how I learned to program in R. Since my answer of: “trial and error, practice, and classes” was insufficient for just about everyone, I wanted to compile a few resources here.
Just as a quick note, just about any programming experience will help you in R as well. Concepts in languages such as Python and Java will directly transfer over to R.</description>
    </item>
    
    <item>
      <title>Website Development - Initial Creation with Blogdown</title>
      <link>/post/website-creation/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/website-creation/</guid>
      <description>In this post, I will explain how I created this website. This will include what resources I used, how I combined blogdown in R with GitHub Pages, and the various changes required for it to function correctly.
I will assume the user has already created a github.io page and linked GitHub and RStudio. I will assume familiarity with GitHub and R in general.
If the two assumptions are met, and the user does not spend too long choosing themes, the basic setup should not take more than 20 minutes.</description>
    </item>
    
  </channel>
</rss>